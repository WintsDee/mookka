
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dfuawprsisgwyvdtfjvl.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRmdWF3cHJzaXNnd3l2ZHRmanZsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ1NjY5OTQsImV4cCI6MjA2MDE0Mjk5NH0.j00hL3NXcE6lTgjkn7ynBnvGS7rjBFQ_weD5aCpd4xw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY, 
  {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      flowType: 'implicit',
    },
    global: {
      headers: {
        'X-Client-Info': 'Mookka/1.0.0'
      },
    },
    realtime: {
      timeout: 30000, // 30 seconds
    }
  }
);

// Helper pour vérifier si une erreur est liée à l'authentification
export const isAuthError = (error: any) => {
  if (!error) return false;
  
  // Erreurs d'authentification courantes de Supabase
  const authErrorCodes = [
    'PGRST301', // JWT malformé
    '401',      // Non autorisé
    '403',      // Accès refusé
    'PGRST403', // RLS violation or JWT expired
  ];
  
  // Vérifier le code d'erreur
  if (typeof error === 'object' && error !== null) {
    if (error.code && authErrorCodes.includes(error.code)) return true;
    if (error.status === 401 || error.status === 403) return true;
    if (error.message && (
      error.message.includes('JWT') || 
      error.message.includes('token') || 
      error.message.includes('auth') ||
      error.message.includes('expired') ||
      error.message.includes('session')
    )) return true;
  }
  
  return false;
};
